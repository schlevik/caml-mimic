name: Create and Publish BentoML Service

on:
  push:
    tags: ["b*.*.*"]

env:
  IMAGE_NAME: caml-bento
  BENTO_NAME: caml_classifier

jobs:
  build:
    name: Build container image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Setup conda Environment
        uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: caml2
          environment-file: environment2.yml
          python-version: 3.8
          auto-activate-base: false
      - name: Get tag
        id: tag
        uses: dawidd6/action-get-tag@v1
      - name: Log into registry
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.ACR_ENDPOINT }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}
      - name: Export Bento Model and Push to Docker
        shell: bash -l {0}
        run: |
          PYTHONPATH=. python learn/cli.py conv_attn dicts.json label_desc.json --filter-size 10 --num-filter-maps 50 --test-model ./predictions/reproCAML_mimic3_full/model.pth --save-model > tag
          export CAML_TAG=`cat tag`
          bentoml build
          bentoml build > build_tag
          export CAML_BUILD_TAG=`tail -n 1 build_tag | cut -d '"' -f2`
          echo "containerizing $CAML_BUILD_TAG"
          bentoml containerize $CAML_BUILD_TAG
          echo "tagging $$CAML_BUILD_TAG"
          docker tag $CAML_BUILD_TAG ${{ secrets.ACR_ENDPOINT }}/${{ env.IMAGE_NAME }}:${{ steps.tag.outputs.tag }} 
          docker push ${{ secrets.ACR_ENDPOINT }}/${{ env.IMAGE_NAME }}:${{ steps.tag.outputs.tag }}
      - name: Deploy
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.IMAGE_NAME }}
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE_BENTO }}
          images: "${{ secrets.ACR_ENDPOINT }}/${{ env.IMAGE_NAME }}:${{ steps.tag.outputs.tag }}"
